<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

					<!-- base_package은 최초 시작할 위치지정 -->
<context:component-scan base-package="com.springbook"/>
<aop:aspectj-autoproxy></aop:aspectj-autoproxy>

	<!-- Connection pool 설정 -->
	<context:property-placeholder location="classpath:database.properties"/>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" 
	destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="maxActive" value="20"></property>
		<property name="maxWait" value="1000"></property>
	</bean>

	<!-- 정형화된 java의 jdbc를 대신 처리 -->
	<bean class="org.springframework.jdbc.core.JdbcTemplate" id="jdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- Transaction Manager 설정 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>	
	
	<!-- Transaction Advice 설정 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- Transaction AOP 설정 -->
	<aop:config>
		<aop:pointcut expression="execution(public * com..*(..))" id="txPointCut"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut"/>
	</aop:config>
<!-- <import resource="context-aop.xml"/> -->

<!-- <bean class="polymorphism.AppleSpeaker" id="speaker"/>

<bean class="polymorphism.SamsungTV" id="tv" 
   	  init-method="initMethod"
 	  destroy-method="destroyMethod"
	  lazy-init="true"
	  scope="singleton" p:speaker-ref="speaker" p:price="5000"> 
	  constructor 갯수만큼 생성자를 호출한다
 	  <constructor-arg ref="speaker"/> 스피커 생성
	  <constructor-arg value="2000"/> 가격 생성 
	  
	  property는 set을 호출
	  <property name="speaker" ref="speaker"></property>
	  setSpeaker()호출
	  <property name="price" value="3000"></property>
	  setPrice()를 호출하는데  위와같이 int이므로
	  value으로 지정하고 초기값을 3000으로 한것
</bean> -->
</beans>